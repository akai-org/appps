---
import { Image } from "astro:assets";
import defaultIcon from "@assets/default_icon.png";
import { isProd } from "@utilities/env";
import { type Project } from "@utilities/data";
import LanguageTag from "./LanguageTag.astro";
import icon_star from "@assets/icon_star.svg";
import icon_github_white from "@assets/icon_github_white.png";

type Props = Omit<Project, "description">;
const { name, url, languages, stargazerCount, metadata } = Astro.props;
const projectUrl = new URL(
  `projects/${name}`,
  isProd ? Astro.site : "http://localhost:4321",
);
const langLimit = 5;
const tooManyLangs = languages.length > langLimit;
---

<div class="flex items-center gap-3 rounded-lg border-2 border-gray-100 p-5">
  <Image
    src={defaultIcon}
    width={150}
    height={150}
    alt="Domyślne logo projektu"
    class="rounded-lg"
  />
  <div
    class="project grid h-4/5 w-5/6 content-between gap-y-1"
    data-langs={languages}
  >
    <div class="flex items-start justify-between gap-2">
      <h2 id="title" class="break-word w-4/5 text-2xl font-bold">
        {
          metadata?.name
            ? metadata.name
            : name.replaceAll("_", " ").replaceAll("-", " ")
        }
      </h2>
      <a href={url} class="flex rounded-lg bg-zinc-800">
        <div
          id="stars"
          class="flex items-center justify-center gap-1 rounded-lg bg-zinc-700 p-1 font-black text-white"
        >
          <Image src={icon_star} alt="ikona gwiazdy" height={18} width={18} />
          {stargazerCount}
        </div>
        <div
          class="flex items-center justify-center rounded-lg bg-zinc-800 p-1"
        >
          <Image
            src={icon_github_white}
            alt="logo github"
            width={22}
            height={22}
          />
        </div>
      </a>
    </div>

    <div>
      <ul class="flex flex-wrap items-center gap-2 text-sm">
        {
          languages
            .slice(0, langLimit)
            .map((language) => <LanguageTag language={language} />)
        }

        <li
          class={tooManyLangs
            ? `w-fit rounded-xl border-2 border-gray-200 bg-gray-100 p-1 text-sm font-semibold`
            : ""}
        >
          {tooManyLangs && `+${languages.length - langLimit}`}
        </li>
      </ul>
    </div>
    <div class="py-1">
      <a
        href={projectUrl}
        class="rounded-md bg-sky-400 px-3 py-2 font-bold text-white">Więcej</a
      >
    </div>
  </div>
</div>

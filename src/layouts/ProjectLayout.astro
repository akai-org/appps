---
import type { Project } from "@utilities/types";
import LanguageTag from "@components/LanguageTag.astro";
import TechTag from "@components/TechTag.astro";
import { Image } from "astro:assets";
import icon_star from "@assets/icon_star.svg";
import icon_github_white from "@assets/icon_github_white.svg";
import { getLangFromUrl } from "@i18n/utils";

interface Props extends Omit<Project, "updatedAt"> {
  formattedName: string;
}

const {
  name,
  formattedName,
  description,
  stargazerCount,
  languages,
  url,
  metadata,
} = Astro.props;

const availableMeta = {
  technologies: false,
  readmePl: false,
  readmeEn: false,
  contributors: false,
  name: false,
}
let m, c;
if(metadata.ok) {
  m = metadata.value;
  if(m.readmeEn.ok) {
    availableMeta.readmeEn = true;
  }
  if(m.readmePl.ok) {
    availableMeta.readmePl = true;
  }
  if(m.config.ok) {
    c = m.config.value;
    if(c.contributors && c.contributors?.length > 0) {
      availableMeta.contributors = true;
    }
    if(c.technologies && c.technologies?.length > 0) {
      availableMeta.technologies = true;
    }
    if(c.name) {
      availableMeta.name = true;
    }
  }
} 

const lang = getLangFromUrl(Astro.url)
let finalDescription;
if(lang === "pl") {
  finalDescription = availableMeta.readmePl ? m?.readmePl : description;
} else {
  finalDescription = availableMeta.readmeEn ? m?.readmeEn : description;
}

---

<section class="flex w-full justify-center">
  <main class="grid w-11/12 gap-y-3 p-1 md:p-3 md:w-3/4">
    <header class="grid gap-y-2">
      <section class="flex items-baseline justify-between w-full gap-1">
        <h1
          class="text-left text-3xl md:text-5xl font-bold flex-initial min-w-0"
          transition:name={`${name}-title`}
        >
          {availableMeta.name ? c?.name : formattedName}
        </h1><a href={url} class="flex w-fit rounded-lg bg-zinc-800 flex-[1_0_auto] max-w-fit">
          <div
            id="stars"
            class="flex items-center justify-center gap-1 rounded-lg bg-zinc-700 p-1 text-lg font-black text-white"
          >
            <Image src={icon_star} alt="ikona gwiazdy" height={25} width={25} />
            {stargazerCount}
          </div>
          <div
            class="flex items-center justify-center rounded-lg bg-zinc-800 p-1"
          >
            <Image
              src={icon_github_white}
              alt="logo github"
              width={27}
              height={27}
            />
          </div>
        </a>
      </section>
      <section class="grid gap-y-1">
        <div>
          <p><strong>JÄ™zyki</strong></p>
          <ul class="flex gap-2 flex-wrap">
            {
              languages.map((lang) => {
                return <LanguageTag language={lang} />;
              })
            }
          </ul>
        </div>
        <div>
          { availableMeta.technologies && <p><strong>Technologie</strong></p>}
          <ul class="flex gap-2 flex-wrap">
            {
              availableMeta.technologies && 
              c?.technologies!.map((tech) => {
                    return <TechTag technology={tech} color="#FFA500" />;
                  })
            }
          </ul>
        </div>
      </section>
    </header>
    <article
      class="prose prose-neutral mx-auto max-w-4xl dark:prose-invert prose-img:mx-auto prose-img:max-w-sm prose-img:cursor-pointer"
    >
      <Fragment set:html={finalDescription} />
    </article>
  </main>
</section>

---
import { getProjects, type Project } from "@utilities/data";
import ProjectCard from "@components/Project.astro";
import PageLayout from "@layouts/PageLayout.astro";
import HomePageLayout from "@layouts/HomePageLayout.astro";
import FilterForm from "@components/FilterForm.astro";

const projects = await getProjects();

type ProjectGroups = {
  valid: Project[];
  archived: Project[];
};

const projectGroups: ProjectGroups = {
  valid: [],
  archived: [],
};
for (const project of projects) {
  if (project.hasData) {
    projectGroups.valid.push(project);
  } else {
    projectGroups.archived.push(project);
  }
}
const countValidProjects = projectGroups["valid"]?.length;
const countArchivedProjects = projects.length - countValidProjects!;
const languages = new Set(projects.map((project) => project.languages).flat());
---

<script>
  function formatSummary(count: number): string {
    const unityNumber = count % 10;
    let summary = "";
    if (count === 1) {
      summary = "projekt";
    } else if (count >= 10 && count <= 21) {
      summary = "projektów";
    } else if (
      count >= 5 &&
      (unityNumber <= 1 || (unityNumber >= 5 && unityNumber <= 9))
    ) {
      summary = "projektów";
    } else if (unityNumber <= 4 && unityNumber > 0) {
      summary = "projekty";
    }
    return summary;
  }

  const getChildrenCount = (parent: HTMLElement): number =>
    parent.childElementCount -
    parent.querySelectorAll(":scope > .hidden").length;

  const getCountSummary = (count: number): string =>
    count > 0 ? `${count} ${formatSummary(count)}` : "brak";

  const preventClick = (e: Event) => {e.preventDefault()};
  const archivedCont = document.getElementById("cont_archived");
  const validCont = document.getElementById("cont_valid");
  const totalCounter = document.getElementById("totalShownCounter");
  const validCounter = document.getElementById("validCounter");
  const archivedCounter = document.getElementById("archivedCounter");
  const archivedContToggle = document.getElementById("archivedContToggle");
  const validContToggle = document.getElementById("validContToggle");
  
  const countChangeHandler = () => {
    if (
      !archivedCont ||
      !validCont ||
      !totalCounter ||
      !validCounter ||
      !archivedCounter ||
      !validContToggle ||
      !archivedContToggle
    ) {
      return;
    }

    const archivedCount = getChildrenCount(archivedCont);
    const validCount = getChildrenCount(validCont);
    const totalCount = archivedCount + validCount;
    
    if(archivedCount === 0) {
      archivedContToggle.removeAttribute("open");
      archivedContToggle.addEventListener("click", preventClick)
    }else {
      archivedContToggle.setAttribute("open", "true");
      archivedContToggle.removeEventListener("click", preventClick)
    }
    if(validCount === 0) {
      validContToggle.removeAttribute("open");
      validContToggle.addEventListener("click", preventClick)
    } else {
      validContToggle.setAttribute("open", "true");
      validContToggle.removeEventListener("click", preventClick);
    }
    
    totalCounter.textContent = getCountSummary(totalCount);
    validCounter.textContent = getCountSummary(validCount);
    archivedCounter.textContent = getCountSummary(archivedCount);
  };
  countChangeHandler();
  document.addEventListener("count_change", countChangeHandler);
</script>
<PageLayout title="portfolio koła AKAI">
  <HomePageLayout>
    <search slot="filters" class="sticky top-0">
      <FilterForm languages={languages} />
    </search>
    <div slot="projects">
      <div class="flex gap-2">
        <span
          >Wyświetlono: <span id="totalShownCounter"
            >{projects.length} projekty</span
          >
        </span>
      </div>
      <details open id="validContToggle">
        <summary class="cursor-pointer"
          >Aktualne: <span id="validCounter">{countValidProjects} projekty</span
          ></summary
        >
        <ul
          class="projects_cont grid gap-6 p-1 sm:p-6 2xl:grid-cols-2"
          id="cont_valid"
        >
          {
            projectGroups["valid"]?.map((project) => (
              <ProjectCard {...project} />
            ))
          }
        </ul>
      </details>
      <details open id="archivedContToggle">
        <summary class="cursor-pointer"
          >Zarchiwizowane: <span id="archivedCounter"
            >{countArchivedProjects} projekty</span
          ></summary
        >
        <ul
          class="projects_cont grid gap-6 p-1 sm:p-6 2xl:grid-cols-2"
          id="cont_archived"
        >
          {
            projectGroups["archived"]?.map((project) => (
              <ProjectCard {...project} />
            ))
          }
        </ul>
      </details>
    </div>
  </HomePageLayout>
</PageLayout>

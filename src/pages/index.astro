---
import { getProjects, type Project } from "@utilities/data";
import ProjectCard from "@components/Project.astro";
import PageLayout from "@layouts/PageLayout.astro";
import HomePageLayout from "@layouts/HomePageLayout.astro";
import FilterForm from "@components/FilterForm.astro";

const projects = await getProjects();

type ProjectGroups = {
  valid: Project[];
  archived: Project[];
};

const projectGroups: ProjectGroups = {
  valid: [],
  archived: [],
};
for (const project of projects) {
  if (project.hasData) {
    projectGroups.valid.push(project);
  } else {
    projectGroups.archived.push(project);
  }
}
const countValidProjects = projectGroups["valid"]?.length;
const countArchivedProjects = projects.length - countValidProjects!;
const languages = new Set(projects.map((project) => project.languages).flat());
---

<script>
  const archivedCont = document.getElementById("cont_archived");
  const validCont = document.getElementById("cont_valid");
  const totalCounter = document.getElementById("totalShownCounter");
  const validCounter = document.getElementById("validCounter");
  const archivedCounter = document.getElementById("archivedCounter");
  document.addEventListener("count_change", () => {
    const archivedCount =
      archivedCont!.childElementCount -
      archivedCont!.querySelectorAll(":scope > .hidden").length;
    const validCount =
      validCont!.childElementCount -
      validCont!.querySelectorAll(":scope > .hidden").length;
    const totalCount: number = archivedCount + validCount;
    totalCounter!.textContent = totalCount.toString();
    validCounter!.textContent = validCount.toString();
    archivedCounter!.textContent = archivedCount.toString();
  });
</script>
<PageLayout title="portfolio koła AKAI">
  <HomePageLayout>
    <search slot="filters" class="sticky top-0">
      <FilterForm languages={languages} />
    </search>
    <div slot="projects">
      <div class="flex gap-2">
        <span
          >Wyświetlono: <span id="totalShownCounter">{projects.length}</span>
          projekty</span
        >
      </div>
      <details open>
        <summary class="cursor-pointer"
          >Aktualne - <span id="validCounter">{countValidProjects}</span> projekty</summary
        >
        <ul
          class="projects_cont grid gap-6 p-1 sm:p-6 2xl:grid-cols-2"
          id="cont_valid"
        >
          {
            projectGroups["valid"]?.map((project) => (
              <ProjectCard {...project} />
            ))
          }
        </ul>
      </details>
      <details open>
        <summary class="cursor-pointer"
          >Zarchiwizowane - <span id="archivedCounter"
            >{countArchivedProjects}</span
          > projekty</summary
        >
        <ul
          class="projects_cont grid gap-6 p-1 sm:p-6 2xl:grid-cols-2"
          id="cont_archived"
        >
          {
            projectGroups["archived"]?.map((project) => (
              <ProjectCard {...project} />
            ))
          }
        </ul>
      </details>
    </div>
  </HomePageLayout>
</PageLayout>
